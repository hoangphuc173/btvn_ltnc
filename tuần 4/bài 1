#include <bits/stdc++.h>

using namespace std;

string ltrim(const string &);
string rtrim(const string &);

/*
 * Complete the 'pageCount' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts following parameters:
 *  1. INTEGER n
 *  2. INTEGER p
 */

int pageCount(int n, int p) {
    if(p==1) return 0;
     if(p-1 > n-p) {
         if(n-p==1){
             if(n%2==1&& p%2==0) return 0;
             else return 1;
         }
         else {
             if((n-p)%2==0) return (n-p)/2;
             if((n-p)%2!=0) return (n-p-1)/2;
         }  
     }
     if(p-1 < n-p){

         if(p-1<2) return 1;
         else {
             if(p-1!=0) return p/2;
             else return (p-1)/2;
             }
         }    
     else {
         if(n%2!=0&&p%2==0) {
             if(n-p==1) return 0;
             else return (n-p-1)/2;
         }
         else return 1; 
     }
     return 0;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string n_temp;
    getline(cin, n_temp);

    int n = stoi(ltrim(rtrim(n_temp)));

    string p_temp;
    getline(cin, p_temp);

    int p = stoi(ltrim(rtrim(p_temp)));

    int result = pageCount(n, p);

    fout << result << "\n";

    fout.close();

    return 0;
}

string ltrim(const string &str) {
    string s(str);

    s.erase(
        s.begin(),
        find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))
    );

    return s;
}

string rtrim(const string &str) {
    string s(str);

    s.erase(
        find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),
        s.end()
    );

    return s;
}
